CMakeLists.txt Demo:
	cmake_minimum_required (VERSION 3.11)
	project (XXXX)

	# Add definition
	add_definitions(-DXXXX)

	# Add the include directories
	include_directories(/path/to/include)

	# Add the source to a variable
	file(GLOB_RECURSE SOURCE "path/to/source/*.cpp")
	or others like list 

	# Add libraries directories
	link_directories("path/to/library")

	# Create app or lib
	add_executable(app ${SOURCE})
	add_library(static_lib STATIC ${SOURCE})
	add_library(dynamic_lib SHARED ${SOURCE})

	# Link dependences libraries (For static lib, it will not linked)
	target_link_libraries(app/lib lib_1 lib_2)

#Build static + dynamic lib 
add_definitions(-DBUILD_LIBRARY)
add_library (xxx SHARED "${SOURCES}")
.h file:
#if defined(_MSC_VER)
# if defined(BUILD_LIBRARY)
#  define XXX_API __declspec(dllexport)
# else
#  define XXX_API __declspec(dllimport)
# endif
#elif defined(__GNUC__)
# if defined(BUILD_LIBRARY)
#  define XXX_API __attribute__((visibility("default")))
# else
#  define XXX_API
# endif
#else
# pragma warning Unknown dynamic link import/export semantics.
#endif

XXX_API void function(xxxx);

VS上远程使用Ninja编译:CMake was unable to find a build program corresponding to "Ninja".  CMAKE_MAKE_PROGRAM is not set.  You probably need to select a different build tool.
没有装Ninja
	Linux上：
	apt-get install ninja-build
	Windows上：
	git clone https://github.com/ninja-build/ninja.git
	git checkout release 
	用x86_x64 Cross Tools Command Prompt for VS 2017打开，python configure.py --bootstrap
	把ninja.exe放入环境变量
	